webpackHotUpdate_N_E("pages/index",{

/***/ "./src/components/LineCard/ServiceRidershipChart.tsx":
/*!***********************************************************!*\
  !*** ./src/components/LineCard/ServiceRidershipChart.tsx ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chart.js */ \"./node_modules/chart.js/dist/Chart.js\");\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(chart_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var chartjs_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chartjs-color */ \"./node_modules/chartjs-color/index.js\");\n/* harmony import */ var chartjs_color__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(chartjs_color__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var patternomaly__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! patternomaly */ \"./node_modules/patternomaly/dist/patternomaly.js\");\n/* harmony import */ var patternomaly__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(patternomaly__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fast_memoize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-memoize */ \"./node_modules/fast-memoize/src/index.js\");\n/* harmony import */ var fast_memoize__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_memoize__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! components */ \"./src/components/index.ts\");\n/* harmony import */ var _LineCard_module_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LineCard.module.scss */ \"./src/components/LineCard/LineCard.module.scss\");\n/* harmony import */ var _LineCard_module_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_LineCard_module_scss__WEBPACK_IMPORTED_MODULE_6__);\nvar _jsxFileName = \"/Users/ian/transitmatters/mbta-covid-dash/src/components/LineCard/ServiceRidershipChart.tsx\",\n    _this = undefined,\n    _s = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\n\n\n\n\n\n\nvar getRidershipNoun = function getRidershipNoun(lineId) {\n  console.log(lineId);\n\n  if ([\"line-Red\", \"line-Orange\", \"line-Blue\", \"line-Green\"].includes(lineId)) {\n    return \"faregate validations\";\n  }\n\n  return \"riders\";\n};\n\nvar normalizeToPercent = function normalizeToPercent(timeSeries) {\n  var firstValue = timeSeries[0];\n  return timeSeries.map(function (n) {\n    return n / firstValue;\n  });\n};\n\nvar asPercentString = function asPercentString(p) {\n  return Math.round(100 * p).toString() + \"%\";\n};\n\nvar getChartLabels = fast_memoize__WEBPACK_IMPORTED_MODULE_4___default()(function (startDate) {\n  var formatter = new Intl.DateTimeFormat(\"en-US\");\n  var now = Date.now();\n  var dateStrings = [];\n  var timestamps = [];\n  var time = startDate.valueOf();\n\n  do {\n    dateStrings.push(formatter.format(time));\n    timestamps.push(time);\n    time += 86400 * 1000;\n  } while (time <= now);\n\n  return {\n    timestamps: timestamps,\n    dateStrings: dateStrings\n  };\n}, {\n  serializer: function serializer(d) {\n    return d.valueOf().toString();\n  }\n});\n\nvar ServiceRidershipChart = function ServiceRidershipChart(props) {\n  _s();\n\n  var color = props.color,\n      serviceHistory = props.serviceHistory,\n      ridershipHistory = props.ridershipHistory,\n      startDate = props.startDate,\n      lineTitle = props.lineTitle,\n      lineData = props.lineData;\n  var canvasRef = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(null);\n  var ridershipPercentage = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useMemo\"])(function () {\n    return ridershipHistory && normalizeToPercent(ridershipHistory);\n  }, [ridershipHistory]);\n  var servicePercentage = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useMemo\"])(function () {\n    return serviceHistory && normalizeToPercent(serviceHistory);\n  }, [serviceHistory]);\n\n  var _useMemo = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useMemo\"])(function () {\n    return getChartLabels(startDate);\n  }, [startDate]),\n      timestamps = _useMemo.timestamps,\n      dateStrings = _useMemo.dateStrings;\n\n  var columns = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useMemo\"])(function () {\n    var ridershipNoun = getRidershipNoun(lineData.id);\n    return [{\n      title: \"Date\",\n      values: dateStrings\n    }, ridershipHistory && {\n      title: \"Ridership (${ridershipNoun}/day)\",\n      values: ridershipHistory\n    }, ridershipPercentage && {\n      title: \"Ridership (percentage)\",\n      values: ridershipPercentage.map(asPercentString)\n    }, serviceHistory && {\n      title: \"Service levels (trips/day)\",\n      values: serviceHistory\n    }, servicePercentage && {\n      title: \"Service levels (percentage)\",\n      values: servicePercentage.map(asPercentString)\n    }].filter(function (x) {\n      return x;\n    });\n  }, [dateStrings, ridershipHistory, ridershipPercentage, serviceHistory, servicePercentage]);\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    var alphaColor = chartjs_color__WEBPACK_IMPORTED_MODULE_2___default()(color).alpha(0.8).rgbString();\n    var ctx = canvasRef.current.getContext(\"2d\");\n    var ridershipNoun = getRidershipNoun(lineData.id);\n    var datasets = [ridershipPercentage && {\n      label: \"Ridership\",\n      actual: ridershipHistory,\n      unit: \"weekday \".concat(ridershipNoun),\n      data: ridershipPercentage,\n      borderColor: color,\n      backgroundColor: alphaColor,\n      borderWidth: 2\n    }, {\n      label: \"Service levels\",\n      actual: serviceHistory,\n      unit: \"weekday trips per direction\",\n      data: servicePercentage,\n      borderColor: alphaColor,\n      backgroundColor: patternomaly__WEBPACK_IMPORTED_MODULE_3___default.a.draw(\"diagonal\", \"rgba(0,0,0,0)\", color, 5),\n      borderWidth: 2\n    }].filter(function (x) {\n      return x;\n    });\n    var chart = new chart_js__WEBPACK_IMPORTED_MODULE_1___default.a(ctx, {\n      type: \"line\",\n      data: {\n        datasets: datasets,\n        labels: timestamps\n      },\n      options: {\n        maintainAspectRatio: false,\n        animation: {\n          duration: 0\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display: false\n            },\n            type: \"time\",\n            time: {\n              unit: \"month\",\n              displayFormats: {\n                month: \"MMM 'YY\"\n              }\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 0.2,\n              maxTicksLimit: 6,\n              callback: asPercentString\n            },\n            gridLines: {\n              display: false\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0\n          }\n        },\n        legend: {\n          position: \"top\",\n          align: \"end\",\n          labels: {\n            boxWidth: 15\n          }\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          callbacks: {\n            label: function label(_ref) {\n              var datasetIndex = _ref.datasetIndex,\n                  index = _ref.index,\n                  value = _ref.value;\n              var _datasets$datasetInde = datasets[datasetIndex],\n                  label = _datasets$datasetInde.label,\n                  actual = _datasets$datasetInde.actual,\n                  unit = _datasets$datasetInde.unit;\n              var valuePercent = Math.round(parseFloat(value) * 100);\n              return \"\".concat(label, \": \").concat(actual[index], \" \").concat(unit, \" (\").concat(valuePercent, \"%)\");\n            }\n          }\n        }\n      }\n    });\n    return function () {\n      return chart.destroy();\n    };\n  }, [ridershipPercentage, servicePercentage, lineData.id]);\n  return __jsx(\"div\", {\n    className: _LineCard_module_scss__WEBPACK_IMPORTED_MODULE_6___default.a.serviceAndRidershipChartContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(\"canvas\", {\n    className: _LineCard_module_scss__WEBPACK_IMPORTED_MODULE_6___default.a.serviceAndRidershipChart,\n    ref: canvasRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), __jsx(components__WEBPACK_IMPORTED_MODULE_5__[\"DataTable\"], {\n    columns: columns,\n    caption: \"Service levels and ridership (\".concat(lineTitle, \")\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(ServiceRidershipChart, \"B4KTUo187L1bCPXdbcYWrW6nvqA=\");\n\n_c = ServiceRidershipChart;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ServiceRidershipChart);\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceRidershipChart\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/LineCard/ServiceRidershipChart.tsx\n");

/***/ })

})